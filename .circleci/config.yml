version: 2.1

executors:
  linux-executor:
    docker:
      - image: arnab2203/test_windows_image:1.1  # Pre-built Linux Docker image

  windows-executor:
    machine:
      image: my-windows-ci-image  # Pre-built Windows Docker image
    resource_class: windows.xlarge
    shell: powershell.exe -ExecutionPolicy Bypass

jobs:
  tcl_task:
    executor: linux-executor
    environment:
      JVM_OPTS: -Xmx2048m
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false
      TERM: dumb

    steps:
      - run:
          name: git version
          command: 'git --version'

      - run:
          name: ssh version
          command: 'ssh -V'

      - checkout

#      - run:
#          name: Calculate dependency hash
#          command: mkdir build && cat $(find -name "build.gradle" | sort) .circleci/config_1.yml >build/allconfig

#      - restore_cache:
#          keys:
#            - deps-{{ checksum "build.gradle" }}

      - run:
          name: Pandoc version
          command: 'pandoc --version'

      - run:
          name: Texlive version
          command: 'tex --version'

      - run:
          name: Gradle Version
          command: './gradlew -v'

#      - run:
#          name: Build TCL Docs
#          command: ./gradlew -Dorg.gradle.parallel=true -Dorg.gradle.daemon=true printVersion archive --stacktrace

#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: deps-{{ checksum "build.gradle" }}

#      - store_artifacts:
#          path: build/doc/tcl
#          destination: tcl

#      - persist_to_workspace:
#          root: build/doc
#          paths:
#            - tcl

  build_windows:
    executor: windows-executor
    steps:
      - run:
          name: Print Java Version
          command: 'java -version'

      - checkout

      - run:
          name: Gradle Version
          command: './gradlew -v'

      - run:
          name: Build for Windows
          shell: bash.exe
          command: ./gradlew printVersion dependencies buildDocs jpackage check generateLicenseReport --stacktrace

      - run:
          name: Rename Build Files
          shell: powershell.exe
          command: |
            $GIT_TAG = git describe --tags (git rev-list --tags --max-count=1)
            Write-Host "Git tag: $GIT_TAG"
            $GIT_DESCRIBE = git describe --tags --abbrev=7 --match "v1.9*" # v1.9 tags only
            Write-Host "Git describe: $GIT_DESCRIBE"
            if ($env:CIRCLE_BRANCH -like "*master*" -or $env:CIRCLE_BRANCH -like "*release*") {
              $BRANCH_NAME = ""
            }
            else {
              $BRANCH_NAME = ".$($env:CIRCLE_BRANCH -replace '/', '-')"
            }
            if ($env:CIRCLE_BRANCH -and $env:CIRCLE_SHA1) {
              $VERSION_STRING = "$GIT_DESCRIBE$BRANCH_NAME"
              Write-Host "Version string: $VERSION_STRING"
              mv build/jpackage/*.exe "build/jpackage/mct_installable-$VERSION_STRING.exe"
            }

      - attach_workspace:
          at: build/doc/tcl

      - store_artifacts:
          path: build/doc/tcl
          destination: .

      - store_artifacts:
          path: build/jpackage
          destination: .

      - persist_to_workspace:
          root: build
          paths:
            - 'jpackage/*.exe'

  mct_build:
    executor: linux-executor
    steps:
      - attach_workspace:
          at: build

      - store_artifacts:
          path: build/jpackage
          destination: .

      - store_artifacts:
          path: build/tcl
          destination: tcl/.

workflows:
  version: 2
  build:
    jobs:
      - tcl_task
#          filters:
#            branches:
#              only:
#                - master
#                - /^release$/
#                - /.*release.*/
#      - build_windows:
#          filters:
#            branches:
#              only:
#                - master
#                - /^release$/
#                - /.*release.*/
#          requires:
#            - tcl_task
#      - mct_build:
#          filters:
#            branches:
#              only:
#                - master
#                - /^release$/
#                - /.*release.*/
#          requires:
#            - build_windows